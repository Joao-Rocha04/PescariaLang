# PescariaLang — EBNF v2.0 (estilo C para if/while)

PROGRAM     = { DECL | STMT } ;

DECL        = "let" IDENT ":" TYPE [ "=" EXPR ] ";" ;
TYPE        = "num" | "bool" ;

STMT        = ASSIGN | ACTION | IF | WHILE | LOG | ";" ;

ASSIGN      = IDENT "=" EXPR ";" ;

IF          = "if" "(" EXPR ")" BLOCK [ "else" BLOCK ] ;
WHILE       = "while" "(" EXPR ")" BLOCK ;

BLOCK       = "{" { STMT } "}" ;

LOG         = "log" "(" EXPR ")" ";" ;

ACTION      = "puxar_linha" "(" ")" ";"                 
            | "recolher_linha" "(" ")" ";"        
            | "trocar_isca" "(" EXPR_NUM ")" ";"                /* enum da isca */
            | "aumentar_profundidade" "(" EXPR_NUM ")" ";"      /* Δ cm ≥ 0 */
            | "reduzir_profundidade" "(" EXPR_NUM ")" ";"       /* Δ cm ≥ 0 */
            | "definir_profundidade" "(" EXPR_NUM ")" ";" ;     /* alvo cm ≥ 0 */

EXPR        = OR ;
OR          = AND { "||" AND } ;
AND         = NOT { "&&" NOT } ;
NOT         = [ "!" ] REL ;

REL         = SUM [ COMPARISON SUM ] ;
COMPARISON  = "==" | "!=" | ">" | "<" | ">=" | "<=" ;

SUM         = TERM { ("+" | "-") TERM } ;
TERM        = FACT { ("*" | "/") FACT } ;

FACT        = NUMBER
            | "true" | "false"
            | SENSOR
            | IDENT
            | "(" EXPR ")" ;

EXPR_NUM    = EXPR ;  /* deve avaliar para número inteiro */

SENSOR      = "sonar" | "peixe_na_linha" | "profundidade" ;

IDENT       = LETTER { LETTER | DIGIT | "_" } ;
NUMBER      = DIGIT { DIGIT } ;

LETTER      = "A" | ... | "Z" | "a" | ... | "z" ;
DIGIT       = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;

/* Espaços/tabs ignorados. Comentários:
   // linha inteira
   /* bloco *\/
*/



